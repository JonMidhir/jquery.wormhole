jQuery.fn.isWormHole=function(group,selector,stopCallback){var $thisObject=this;$thisObject.css('overflow','hidden');$thisObject.data('wormGroup',group);$thisObject.addClass('wormgroup-'+group);var containmentCoords=[$thisObject.offset().left,$thisObject.offset().top-$thisObject.height(),$thisObject.offset().left+liWidth,$thisObject.offset().top+($thisObject.height()*2)];$thisObject.delegate(selector,'mouseover',function(){if($(this).data('isWorm')!=true&&$(this).data('isClone')!=true){$(this).draggable("option","containment",containmentCoords);$(this).isWorm(group,$thisObject,stopCallback)}})}jQuery.fn.isWorm=function(group,parent,stopCallback){if(this.data('isWorm')!=true){var southLimit=parent.height();var $nextWormHole=parent.next('.wormgroup-'+group);var $cloneWorm=this.clone(true);$cloneWorm.data('isClone',true);var cloneContainmentCoords=[$nextWormHole.offset().left,$nextWormHole.offset().top-$nextWormHole.height(),$nextWormHole.offset().left+liWidth,$nextWormHole.offset().top+$nextWormHole.height()+50];var originalPos=this.position();$(this).data('isWorm',true);this.bind("drag",function(event,ui){if($(this).position().top+$(this).height()>southLimit){var newHeight=$(this).position().top-parent.height();$cloneWorm.css('left',$(this).css('left')).css('opacity',$(this).css('opacity')).css('top',newHeight+"px");$nextWormHole.append($cloneWorm)}});this.bind("dragstop",function(event,ui){if($(this).position().top>southLimit){var draggableOptions=$(this).data("draggable").options;$(this).css('top',$cloneWorm.position().top+'px');$cloneWorm.replaceWith($(this));stopCallback;$(this).unbind('drag').unbind('dragstop');$(this).draggable(draggableOptions);$(this).data('isWorm',false)}else if($(this).position().top+$(this).height()>southLimit-10){var newHeight=$(this).position().top-720;$cloneWorm.css('left',$(this).css('left')).css('opacity',$(this).css('opacity')).css('top',newHeight+"px")}else{$cloneWorm.detach()}})}}